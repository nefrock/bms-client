arr = [('E5',8),('B4',4),('C5',4),('D5',8),('C5',4),('B4',4),('A4',7),('N',1),('A4',4),('C5',4),('E5',8),('D5',4),('C5',4),('B4',7),('N',1),('B4',4),('C5',4),('D5',8),('E5',8),('C5',8),('A4',6),('N',2),('A4',12),('N',8),('D5',8),('F5',4),('A5',8),('G5',4),('F5',4),('E5',7),('N',1),('E5',4),('C5',4),('E5',7),('N',1),('D5',4),('C5',4),('B4',7),('N',1),('B4',4),('C5',4),('D5',8),('E5',8),('C5',8),('A4',7),('N',1),('A4',12)]
arr = [('DS4',4),('FS4',4),('GS4',4),('AS4',4),('FS4',4),('N',4),('GS4',4),('AS4',4),('GS4',4),('FS4',4),('F4',8),('DS4',8),('CS4',8),('N',8),('DS4',8),('CS4',4),('DS4',4),('FS4',4),('F4',4),('DS4',3),('N',1),('DS4',4),('D4',8),('C4',4),('D4',4),('DS4',8)]
arr = [('G5',7),('N',1),('G5',5),('N',1),('G5',1),('N',1),('B5',4),('G5',8),('D5',4),('G5',7),('N',1),('G5',5),('N',1),('G5',1),('N',1),('B5',4),('G5',8),('D5',4),('G5',7),('N',1),('G5',5),('N',1),('G5',1),('N',1),('B5',4),('G5',8),('B5',4),('D6',16),('N',8),('DS6',8),('E6',5),('N',1),('E6',1),('N',1),('E6',4),('C6',4),('E6',8),('N',8),('D6',5),('N',1),('D6',1),('N',1),('D6',4),('B5',4),('D6',8),('N',8),('C6',3),('N',1),('C6',3),('N',1),('C6',8),('B5',3),('N',1),('B5',3),('N',1),('B5',8),('A5',7),('N',1),('A5',5),('N',1),('A5',2),('D6',8),('N',8)]
arr = [('A5',3),('N',1),('A5',8),('B5',4),('A5',4),('FS5',4),('A5',7),('N',1),('A5',3),('N',1),('A5',8),('B5',4),('A5',4),('FS5',4),('A5',8),('D5',3),('N',1),('D5',3),('N',1),('D5',4),('E5',4),('FS5',12),('D5',4),('FS5',12),('A5',3),('N',1),('A5',16),('D5',3),('N',1),('D5',3),('N',1),('D5',4),('E5',4),('FS5',16),('D5',3),('N',1),('D5',3),('N',1),('D5',4),('E5',4),('FS5',16),('E5',3),('N',1),('E5',3),('N',1),('E5',4),('D5',4),('E5',8),('FS5',8),('A5',8),('G5',8),('FS5',8),('E5',8)]
arr = [('E6',4),('D6',4),('FS5',8),('GS5',8),('CS6',4),('B5',4),('D5',8),('E5',8),('B5',4),('A5',4),('CS5',8),('E5',8),('A5',16)]
arr = [('E6',4),('D6',4),('FS5',8),('GS5',8),('CS6',4),('B5',4),('D5',8),('E5',8),('B5',4),('A5',4),('CS5',8),('E5',8),('A5',16)]
arr = [('G5',48),('AS5',4),('C6',2),('N',10),('N',64),('G5',48),('C6',4),('D6',2),('N',10),('G6',12),('F6',12),('D6',20),('G5',4),('AS5',4),('C6',52),('N',1),('C6',3),('AS5',8),('G5',68),('N',24),('D6',4),('F6',4),('G6',3),('N',1),('G6',4),('N',4),('G6',12),('D6',4),('F6',4),('G6',3),('N',1),('G6',4),('N',4),('G6',12),('D6',4),('F6',4),('G6',3),('N',1),('G6',4),('N',4),('G6',12),('D6',4),('F6',4),('G6',3),('N',1),('G6',4),('N',4),('G6',12),('G5',2),('AS5',8),('D6',12),('CS6',24),('AS5',12),('G5',12),('F6',12),('E6',42),('G5',6),('AS5',6),('D6',12),('CS6',8),('AS5',6),('G5',6),('F6',12),('E6',8),('D6',6),('AS5',4),('A6',12),('G6',42),('G5',4),('AS5',4),('D6',4),('A6',12),('G6',8),('D6',6),('AS5',4),('F6',12),('E6',20),('D6',4),('A6',8),('AS6',8),('A6',8),('G6',12),('D6',4),('AS5',6),('F6',12),('E6',4),('G5',4),('B5',4),('D6',4),('CS6',52),('C6',6),('AS5',4),('G5',31),('N',1),('G5',3),('N',1),('G5',4),('N',12),('G5',4),('A5',4),('AS5',4),('D6',4),('CS6',39),('N',1),('CS6',4),('C6',6),('AS5',4),('G5',31),('N',1),('G5',3),('N',1),('G5',4),('N',36),('N',8),('G5',47),('N',1),('G5',6),('A5',4),('AS5',4),('D6',4),('CS6',48),('G5',12),('A5',4),('AS5',4),('D6',8),('CS6',12),('G5',8),('N',8)]
arr = [('E4',4),('A4',4),('C5',4),('B4',4),('A4',4),('C5',4),('A4',4),('B4',4),('A4',4),('F4',4),('G4',4),('E4',16),('N',8),('E4',4),('A4',4),('C5',4),('B4',4),('A4',4),('C5',4),('A4',4),('B4',4),('A4',4),('E4',4),('DS4',4),('D4',16),('N',8),('D4',4),('F4',4),('GS4',4),('B4',16),('N',8),('D4',4),('F4',4),('GS4',4),('A4',16),('N',8)]
parsed_obj = {}
n_s_flags = {}

for s in arr:
    if not s[0] in parsed_obj and s[0] != "N":
        parsed_obj[s[0]] = [0]
        n_s_flags[s[0]] = "n"

n_s_flags[arr[0][0]] = "s"
parsed_obj[arr[0][0]] = []

print(parsed_obj)
for s in arr:
    code = s[0]
    duration = s[1]
    for key in parsed_obj:
        if key == code:
            print()
            parsed_obj[key].append(duration)
            parsed_obj[key].append(0)
        else:
            parsed_obj[key][-1] += duration
for key in parsed_obj:
    if parsed_obj[key][-1] == 0:
        print(parsed_obj[key])
        parsed_obj[key].pop()
        print(parsed_obj[key])
for key in parsed_obj:
    parsed_obj[key].insert(0, n_s_flags[key])
            
print(parsed_obj)
